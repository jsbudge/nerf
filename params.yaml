# For original NeRF
nerf_params:
  # basic hyperparams to specify where to load/save data from/to
  basic:
    log_dir: logs
    dataset_name: blender
    scene: lego
  # model hyperparams
  model:
    use_viewdirs: True
    randomized: True
    ray_shape: cone  # should be "cylinder" if llff
    white_bkgd: False  # should be False if using llff
    override_defaults: True
    num_levels: 2
    num_samples: 128
    hidden: 256
    density_noise: 0.0
    density_bias: -1.0
    rgb_padding: 0.001
    resample_padding: 0.01
    min_deg: 0
    max_deg: 16
    viewdirs_min_deg: 0
    viewdirs_max_deg: 4
  # loss and optimizer hyperparams
  loss:
    coarse_weight_decay: 0.1
    lr_init: .001
    lr_final: .00005
    lr_delay_steps: 2500
    lr_delay_mult: 0.1
    weight_decay: .00001
  # training hyperparams
  training:
    factor: 2
    max_steps: 2500
    batch_size: 2048
    do_eval: False
    continue_training: True
    save_every: 1000
    device: cuda
  # visualization hyperparams
  visualization:
    chunks: 8192
    model_weight_path: log/model.pt
    visualize_depth: True
    visualize_normals: True
  # extracting mesh hyperparams
  mesh:
    x_range: [-1.2, 1.2]
    y_range: [-1.2, 1.2]
    z_range: [-1.2, 1.2]
    grid_size: 256
    sigma_threshold: 50.0
    occ_threshold: 0.2


# For SARNeRF
sarnerf_params:
  # basic hyperparams to specify where to load/save data from/to
  basic:
    log_dir: logs
    sdr_file: /home/jeff/SDR_DATA/RAW/12172024/SAR_12172024_113146.sar
    data_center: [40.093229, -111.768341, 1353.06885]
  # model hyperparams
  model:
    use_viewdirs: True
    randomized: True
    ray_shape: cone  # should be "cylinder" if llff
    override_defaults: True
    num_levels: 2
    num_samples: 180
    hidden: 156
    density_noise: 0.0
    density_bias: -1.0
    rgb_padding: 0.0001
    resample_padding: 0.001
    min_deg: 0
    max_deg: 4
    viewdirs_min_deg: 0
    viewdirs_max_deg: 4
    rays_per_chunk: 2048
    total_num_rays: 2048
    wavelength: 0.031228381041666666
  # loss and optimizer hyperparams
  loss:
    coarse_weight_decay: 0.01
    lr_init: .5
    lr_final: .00005
    lr_delay_steps: 5500
    lr_delay_mult: 0.05
    weight_decay: .000001
  # training hyperparams
  training:
    factor: 2
    split: .7
    max_steps: 2500
    batch_size: 1
    do_eval: False
    continue_training: True
    save_every: 1000
    device: cuda
    az_samples: 48
    el_samples: 48
    num_workers: 0
    single_example: False
  # visualization hyperparams
  visualization:
    chunks: 8192
    model_weight_path: log/sarmodel.pt
    visualize_depth: True
    visualize_normals: True
  # extracting mesh hyperparams
  mesh:
    x_range: [-1.2, 1.2]
    y_range: [-1.2, 1.2]
    z_range: [-1.2, 1.2]
    grid_size: 256
    sigma_threshold: 50.0
    occ_threshold: 0.2